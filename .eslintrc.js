/*
ðŸ‘‹ Hi! This file was autogenerated by tslint-to-eslint-config.
https://github.com/typescript-eslint/tslint-to-eslint-config

It represents the closest reasonable ESLint configuration to this
project's original TSLint configuration.

We recommend eventually switching this configuration to extend from
the recommended rulesets in typescript-eslint. 
https://github.com/typescript-eslint/tslint-to-eslint-config/blob/master/docs/FAQs.md

Happy linting! ðŸ’–
*/
module.exports = {
  ignorePatterns: ['*.js'],
  env: {
    'shared-node-browser': true,
    browser: true,
    commonjs: true,
    es2021: true,
    jest: true,
    node: true,
    serviceworker: true,
    worker: true,
  },
  extends: [
    'react-app',
    'plugin:@typescript-eslint/recommended',

    // removed because we don't employ strict type checking as an organization
    // 'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'plugin:react/recommended',
    'plugin:react-hooks/recommended',
    'plugin:import/typescript',
  ],
  overrides: [
    {
      files: ['*.ts', '*.tsx'], // Your TypeScript files extension
      parserOptions: {
        project: ['./tsconfig.json'], // Specify it only for TypeScript files
      },
    },
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: 'tsconfig.json',
    sourceType: 'module',
  },
  plugins: [
    // 'eslint-plugin-jsdoc',
    // 'eslint-plugin-prefer-arrow',
    // https://stackoverflow.com/questions/65675771/eslint-couldnt-find-the-config-prettier-typescript-eslint-after-relocating
    // 'eslint-config-prettier',
    'eslint-plugin-compat',
    'eslint-plugin-import',
    'eslint-plugin-jsx-a11y',
    'eslint-plugin-prettier',
    'eslint-plugin-react',
    'eslint-plugin-react-hooks',
    '@emotion',
    '@typescript-eslint',
  ],
  rules: {
    // This will eventually allow the dev to auto import the pragma - Chris
    // '@emotion/jsx-import': 1,
    // Since we're using react, we dont want vanilla emotion imports
    '@emotion/no-vanilla': 2,
    'react/prop-types': [2, { ignore: ['children'] }],
    // Most developers I talked to internally do not care for this rule
    // so I took it out. - Jake
    '@typescript-eslint/explicit-module-boundary-types': 'off',
    // As of react 17 these 2 rules are no longer needed - Chris
    'react/jsx-uses-react': 'off',
    'react/react-in-jsx-scope': 'off',
    // I'm leaving this warning on by default since it seems like a good
    // idea for linting and code readability to have it. If you want to
    // use explicit any types just uncomment this line. - Jake
    // '@typescript-eslint/no-explicit-any': 'off',
  },
};
